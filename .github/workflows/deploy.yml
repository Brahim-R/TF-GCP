name: Deploy Terraform to GCP

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  terraform:
    name: Terraform Deployment
    runs-on: ubuntu-latest

    env:
      # Use valid, hardcoded names for resources since secrets are not configured.
      # These names must be unique within your GCP project.
      TF_VAR_project_id: ${{ secrets.GCP_PROJECT_ID }}
      TF_VAR_bucket_name: "my-unique-bucket-name-${{ github.run_id }}"
      TF_VAR_vm_name: "my-instance-${{ github.run_id }}"
      TF_VAR_machine_type: "e2-medium"
      TF_VAR_sql_instance_name: "my-sql-instance"
      TF_VAR_db_type: "POSTGRES_17"
      TF_VAR_db_name: "app_db"
      TF_VAR_db_username: "my_user"
      TF_VAR_secret_name: "db-password-secret"
      TF_VAR_fw_rule: "allow-all-rule"
      GOOGLE_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_CREDENTIALS }}

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1

    - name: Terraform Init
      run: terraform init

    - name: Terraform Format Check
      run: terraform fmt -check

    - name: Terraform Validate
      run: terraform validate

    - name: Terraform Plan
      run: terraform plan -var="db_name=[\"dev_db\",\"prod_db\"]"

    - name: Terraform Apply
      run: terraform apply -auto-approve -var="db_name=[\"dev_db\",\"prod_db\"]"

    - name: Terraform Destroy
      run: terraform destroy
